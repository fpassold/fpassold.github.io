
% # Projeto Controladores

% ## Projeto de Lead

% > Ref.: [Projeto de Controlador PD (Aula de 28/05/2020)](https://fpassold.github.io/Controle_3/projeto_PD_lead_2020.html)

% Lembrando da eq. do PD (aula passada).

load planta
zpkD4)
 zpkD4)
      
{Error: Invalid expression. When calling a function or
indexing a variable, use parentheses. Otherwise, check for
mismatched delimiters.
} 
zpk(PD4)

ans =
 
  (z-0.9608)
  ----------
      z
 
Sample time: 0.02 seconds
Discrete-time zero/pole/gain model.

zpk(BoG)

ans =
 
   0.00046711 (z+3.27) (z+0.2335)
  --------------------------------
  (z-0.9608) (z-0.9048) (z-0.6703)
 
Sample time: 0.02 seconds
Discrete-time zero/pole/gain model.

z_Lead=(0.9608+0.9048)/2
z_Lead =
       0.9328

% Determinando um valor "razoável" para $t_s$ desejado.

% $t_s=0,5$ parece um valor "razoável".

angulos2
PD/Lead Controller Design
In this version you should arbitrate the initial position of the pole of C(z)

Plant (in s-plan) informed, G(s):
ans =
 
         400
  ------------------
  (s+20) (s+5) (s+2)
 
Continuous-time zero/pole/gain model.

Sampling time informed: T=0.02
Plant in discrete form, BoG(z):
ans =
 
   0.00046711 (z+3.27) (z+0.2335)
  --------------------------------
  (z-0.9608) (z-0.9048) (z-0.6703)
 
Sample time: 0.02 seconds
Discrete-time zero/pole/gain model.

Maximum overshoot desired (%OS), in %: ? {Operation terminated by user during <a href="matlab:matlab.internal.language.introspective.errorDocCallback('angulos2', '/Volumes/DADOS/fpassold (DADOS)/Documents/UPF/Controle_3/2023_2/angulos2.m', 40)" style="font-weight:bold">angulos2</a> (<a href="matlab: opentoline('/Volumes/DADOS/fpassold (DADOS)/Documents/UPF/Controle_3/2023_2/angulos2.m',40,0)">line 40</a>)} 
zpk(G)

ans =
 
         400
  ------------------
  (s+20) (s+5) (s+2)
 
Continuous-time zero/pole/gain model.

T
T =
         0.02
zpk(BoG)

ans =
 
   0.00046711 (z+3.27) (z+0.2335)
  --------------------------------
  (z-0.9608) (z-0.9048) (z-0.6703)
 
Sample time: 0.02 seconds
Discrete-time zero/pole/gain model.


angulos2
PD/Lead Controller Design
In this version you should arbitrate the initial position of the pole of C(z)

Plant (in s-plan) informed, G(s):
ans =
 
         400
  ------------------
  (s+20) (s+5) (s+2)
 
Continuous-time zero/pole/gain model.

Sampling time informed: T=0.02
Plant in discrete form, BoG(z):
ans =
 
   0.00046711 (z+3.27) (z+0.2335)
  --------------------------------
  (z-0.9608) (z-0.9048) (z-0.6703)
 
Sample time: 0.02 seconds
Discrete-time zero/pole/gain model.

Maximum overshoot desired (%OS), in %: ? 10
zeta (damping factor) should be: 0.5912
Enter desired settling time, t_s: ? 0.5

It results in the natural oscillation frequency, wn = 13.5328 (rad/s)
The MF poles (in the s-plane) should be located in:
8.0000 +/- j10.9150
Localization of MF poles in the z-plane should be:
z = 0.8319 +/- j0.1845

Enter the position of the controller pole (z-plane): ? 0.25
Working with the temporary FTMA(z)...
Open poles = 0.960789
Open poles = 0.904837
Open poles = 0.67032
Open poles = 0.25
Open zeros = -3.27018
Open zeros = -0.233457
Angular contribution of each pole in the z-plane:
 p1 = 0.9608 --> 124.93^o
 p2 = 0.9048 --> 111.56^o
 p3 = 0.6703 --> 48.79^o
 p4 = 0.2500 --> 17.60^o
Sum of angular contribution of poles: 302.87^o
Check the figure window -> Paused (enter to continue)...
Angular contribution of each zero in the z-plane:
 z1 = -3.2702 --> 2.58^o
 z2 = -0.2335 --> 9.83^o
Sum of angular contribution of zeros: 12.40^o
Final angle for the zero of C(z): 110.4714^o

Ok, determining the position for zero of C (z)...
Final position for the Lead zero: z_c=0.9008
Updating final RL graph...
The Lead controller final result is (variable C):
ans =
 
  (z-0.9008)
  ----------
   (z-0.25)
 
Sample time: 0.02 seconds
Discrete-time zero/pole/gain model.

axis([0.7 1.1 -0.3 0.3])
axis([0.7 1.05 -0.3 0.3])
zpk(ftma)

ans =
 
  0.00046711 (z+3.27) (z-0.9008) (z+0.2335)
  -----------------------------------------
  (z-0.9608) (z-0.9048) (z-0.6703) (z-0.25)
 
Sample time: 0.02 seconds
Discrete-time zero/pole/gain model.

zpk(C)

ans =
 
  (z-0.9008)
  ----------
   (z-0.25)
 
Sample time: 0.02 seconds
Discrete-time zero/pole/gain model.

ftma_Lead = ftma; % "salva" o ftma recém calculado
Lead = C; % "salva" a eq. do controlador
[K_Lead,polosMF_Lead]=rlocfind(ftma_Lead)
Select a point in the graphics window
selected_point =
      0.83191 +    0.18597i
K_Lead =
       16.535
polosMF_Lead =
      0.89947 +          0i
      0.83202 +    0.18596i
      0.83202 -    0.18596i
      0.21472 +          0i
arc.m
{Unable to resolve the name arc.m.} 

% ![RL_Lead.png](RL_Lead.png)

% Fechando a malha

K_Lead = 17;
ftmf_Lead = feedback(K_Lead*ftma_Lead, 1);
pole(ftmf_Lead)
ans =
      0.89952 +          0i
      0.83229 +    0.18994i
      0.83229 -    0.18994i
       0.2139 +          0i
figure; step(ftmf_Lead, ftmf_PD4)
legend('Lead', 'PD4')

% ![step_Lead_PD4.png](step_Lead_PD4.png)

stepinfo(ftmf_Lead)
ans = 
  <a href="matlab:helpPopup struct" style="font-weight:bold">struct</a> with fields:

        RiseTime: 0.14
    SettlingTime: 0.46
     SettlingMin: 0.79616
     SettlingMax: 0.91086
       Overshoot: 11.343
      Undershoot: 0
            Peak: 0.91086
        PeakTime: 0.3
erro_Lead = (1 - dcgain(ftmf_Lead))/1*100
erro_Lead =
       18.194

% Consigo um Lead mais rápido?
% Testando $t_s=0.4$.

angulos2.m
{Unable to resolve the name angulos2.m.} 
angulos2.m
{Unable to resolve the name angulos2.m.} 
angulos2
PD/Lead Controller Design
In this version you should arbitrate the initial position of the pole of C(z)

Plant (in s-plan) informed, G(s):
ans =
 
         400
  ------------------
  (s+20) (s+5) (s+2)
 
Continuous-time zero/pole/gain model.

Sampling time informed: T=0.02
Plant in discrete form, BoG(z):
ans =
 
   0.00046711 (z+3.27) (z+0.2335)
  --------------------------------
  (z-0.9608) (z-0.9048) (z-0.6703)
 
Sample time: 0.02 seconds
Discrete-time zero/pole/gain model.

Maximum overshoot desired (%OS), in %: ? 10
zeta (damping factor) should be: 0.5912
Enter desired settling time, t_s: ? 0.4

It results in the natural oscillation frequency, wn = 16.9160 (rad/s)
The MF poles (in the s-plane) should be located in:
10.0000 +/- j13.6438
Localization of MF poles in the z-plane should be:
z = 0.7884 +/- j0.2206

Enter the position of the controller pole (z-plane): ? 0.25
Working with the temporary FTMA(z)...
Open poles = 0.960789
Open poles = 0.904837
Open poles = 0.67032
Open poles = 0.25
Open zeros = -3.27018
Open zeros = -0.233457
Angular contribution of each pole in the z-plane:
 p1 = 0.9608 --> 127.99^o
 p2 = 0.9048 --> 117.81^o
 p3 = 0.6703 --> 61.84^o
 p4 = 0.2500 --> 22.28^o
Sum of angular contribution of poles: 329.93^o
Check the figure window -> Paused (enter to continue)...
Angular contribution of each zero in the z-plane:
 z1 = -3.2702 --> 3.11^o
 z2 = -0.2335 --> 12.18^o
Sum of angular contribution of zeros: 15.30^o
Final angle for the zero of C(z): 134.6333^o

Ok, determining the position for zero of C (z)...
Final position for the Lead zero: z_c=1.0063
Updating final RL graph...
The Lead controller final result is (variable C):
ans =
 
  (z-1.006)
  ---------
  (z-0.25)
 
Sample time: 0.02 seconds
Discrete-time zero/pole/gain model.

Lead2 = C;
ftma_Lead2 = ftma;
axis([0.7 1.05 -0.3 0.3])
1.006
ans =
        1.006
% Note que foi gerado um zero instável para o PD...
[K_Lead2,polosMF_Lead2]=rlocfind(ftma_Lead2)
Select a point in the graphics window
selected_point =
      0.78873 +    0.22148i
K_Lead2 =
       16.641
polosMF_Lead2 =
      0.99102 +          0i
      0.78849 +    0.22149i
      0.78849 -    0.22149i
      0.21018 +          0i

%![RL_Lead2.png](RL_Lead2.png)

ftmf_Lead2 = feedback(K_Lead2*ftma_Lead2, 1);
pole(ftma_Lead2)
ans =
      0.96079
      0.90484
      0.67032
         0.25

figure; step(ftma_Lead2)
figure; step(ftmf_Lead2)
pole(ftmf_Lead2)
ans =
      0.99102 +          0i
      0.78849 +    0.22149i
      0.78849 -    0.22149i
      0.21018 +          0i

% ![step_Lead2.png](step_Lead2.png)

save planta
diary off
