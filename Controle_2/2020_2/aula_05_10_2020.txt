pwd

ans =

    '/Volumes/Data/Users/fernandopassold/Documents/UPF/Controle_2/6_Projetos_via_RL/2020_2'

format compact
format short

G=tf( 1, poly([ -1 -2 -10]) );
zpk(G)

ans =
 
          1
  ------------------
  (s+10) (s+2) (s+1)
 
Continuous-time zero/pole/gain model.

OS=20; % overshoot em %
zeta=(-log(OS/100))/(sqrt(pi^2+(log(OS/100)^2)))
zeta =
    0.4559
rlocus(G)
hold on
sgrid(zeta, 0);
help rlocfind
 <strong>rlocfind</strong>  Find root locus gains for a given set of roots.
 
    [K,POLES] = <strong>rlocfind</strong>(SYS)  is used for interactive gain 
    selection from the root locus plot of the SISO system SYS 
    generated by RLOCUS.  <strong>rlocfind</strong> puts up a crosshair cursor 
    in the graphics window which is used to select a pole location 
    on an existing root locus.  The root locus gain associated 
    with this point is returned in K and all the system poles for 
    this gain are returned in POLES.  
 
    [K,POLES] = <strong>rlocfind</strong>(SYS,P)  takes a vector P of desired root 
    locations and computes a root locus gain for each of these 
    locations (i.e., a gain for which one of the closed-loop roots
    is near the desired location).  The j-th entry of the vector K
    gives the computed gain for the location P(j), and the j-th 
    column of the matrix POLES lists the resulting closed-loop poles.
 
    See also  <a href="matlab:help rlocus">rlocus</a>.

    <a href="matlab:matlab.internal.language.introspective.overloads.displayOverloads('rlocfind')">Other functions named rlocfind</a>

[K,POLES] = rlocfind(G) 
Select a point in the graphics window
selected_point =
  -1.1903 + 2.3699i
K =
   54.3215
POLES =
 -10.6507 + 0.0000i
  -1.1747 + 2.3661i
  -1.1747 - 2.3661i
K=54;
ftmf = feedback( K*G, 1);
ftmf

ftmf =
 
             54
  ------------------------
  s^3 + 13 s^2 + 32 s + 74
 
Continuous-time transfer function.

figure; step(1*ftmf) % 1 = degrau unitário
stepinfo(ftmf)
ans = 
  <a href="matlab:helpPopup struct" style="font-weight:bold">struct</a> with fields:

        RiseTime: 0.6107
    SettlingTime: 3.2619
     SettlingMin: 0.6827
     SettlingMax: 0.8768
       Overshoot: 20.1539
      Undershoot: 0
            Peak: 0.8768
        PeakTime: 1.4485
dcgain(ftmf)
ans =
    0.7297
dcgain(ftmf)
ans =
    0.7297
ans =
 ans =
      
{Error: Expression or statement is incomplete or
incorrect.
} 
erro=((1-dcgain(ftmf))/1)*100
erro =
   27.0270

% Partindo para controlador Integrador Puro

C_I = tf( 1, [1 0]); 
zpk(C_I)

ans =
 
  1
  -
  s
 
Continuous-time zero/pole/gain model.

ftma_I = C_I * G;
zpk(ftma_I)

ans =
 
           1
  --------------------
  s (s+10) (s+2) (s+1)
 
Continuous-time zero/pole/gain model.

figure; rlocus(ftma_I)
hold on; sgrid(zeta, 0)
[Ki,POLES] = rlocfind(ftma_I)
Select a point in the graphics window
selected_point =
  -0.3148 + 0.5769i
Ki =
   10.1733
POLES =
  -9.9858 + 0.0000i
  -2.3988 + 0.0000i
  -0.3077 + 0.5745i
  -0.3077 - 0.5745i
Ki=10; 
% RL salvo no arquivo RL_controlador_int_puro.png
% ![RL_controlador_int_puro.png](RL_controlador_int_puro.png)
ftmf_I = feedback( Ki*ftma_I, 1)

ftmf_I =
 
                 10
  ---------------------------------
  s^4 + 13 s^3 + 32 s^2 + 20 s + 10
 
Continuous-time transfer function.

figure; step(ftmf_I)
figure; step(ftmf, ftmf_I)
save planta
diary off
