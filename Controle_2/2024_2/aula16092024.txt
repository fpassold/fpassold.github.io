% Recordando da aula passada --> embasamento teórico:
% [Projeto de PI usando contribuição angular(versão antiga, de 2019/2)](https://fpassold.github.io/Controle_2/projeto_controladores_acao_integral_extendido.html)

% [Projeto de PI (por contribuição angular) + Lag; (Aula de 30/10/2020)(https://fpassold.github.io/Controle_2/PI_angular_Lag.html)]

load planta
zpk(G)

ans =
 
          20
  ------------------
  (s+10) (s+4) (s+1)
 
Continuous-time zero/pole/gain model.

% Raciocínio com opções para zero do PI...
% foto...

% ## Projeto do PI (Opção 1)

% Opção 1: $-1 < z_{PI} < 0$ com $z_{PI}\cong -1$.

% Eq. genérica do PI:

% $C_{PI}=\dfrac{K_{PI}(s+z_{PI})}{s}$

PI1=tf( [ 1  0.9] , [1 0])

PI1 =
 
  s + 0.9
  -------
     s
 
Continuous-time transfer function.

ftma_PI1=PI1*G;
zpk(ftma_PI1)

ans =
 
       20 (s+0.9)
  --------------------
  s (s+10) (s+4) (s+1)
 
Continuous-time zero/pole/gain model.

rlocus(ftma_PI1)

% realizando zoom na região de interesse

% ![RL_PI1.png](RL_PI1.png)

hold on;
sgrid(zeta,0)
[K_PI1,polosMF]=rlocfind(ftma_PI1)
Select a point in the graphics window
selected_point =
      -1.5449 +     2.1478i
K_PI1 =
       3.7195
polosMF =
       -10.98 +          0i
      -1.5844 +     2.1577i
      -1.5844 -     2.1577i
     -0.85085 +          0i
% fechando a malha

ftmf_PI1=feedback(K_PI1*ftma_PI1, 1);
figure; step(ftmf_PI1)
stepinfo(ftmf_PI1)
ans = 
  <a href="matlab:helpPopup struct" style="font-weight:bold">struct</a> with fields:

        RiseTime: 0.75423
    SettlingTime: 2.1777
     SettlingMin: 0.91804
     SettlingMax: 1.0677
       Overshoot: 6.7667
      Undershoot: 0
            Peak: 1.0677
        PeakTime: 1.5986

% ![step_PI1.png](step_PI1.png)

% Comparando resposta com Controlador Integrador Puro e Proporcional

figure; step(ftmf, ftmf_I2, ftmf_PI1)
legend('K=4', 'Int. Puro', 'PI_1')

% ![step_ftmt_I2_PI1.png](step_ftmt_I2_PI1.png)

save planta
diary off
% Realizando de outros PI's. Outros PI's
% promissores:

% * Opção 5) $z_{PI}=-1$; cancelando o pólo mais lento do sistema;
% * Opção 3) $-10 < z_{PI} < -4$.

% ## Projeto do PI (Opção 5)

PI5=tf( [ 1  1] , [1 0])

PI5 =
 
  s + 1
  -----
    s
 
Continuous-time transfer function.

ftma_PI5=PI5*G;
figure; rlocus(ftma_PI5)
% zoom na região de interesse:
axis([-12 -1 -9 9])
axis([-12 1 -9 9])
hold on;
sgrid(zeta,0)
[K_PI5,polosMF]=rlocfind(ftma_PI5)
Select a point in the graphics window
selected_point =
      -1.5107 +     2.0619i
K_PI5 =
        3.609
polosMF =
      -10.949 +          0i
      -1.5256 +     2.0652i
      -1.5256 -     2.0652i
           -1 +          0i
zpk(ftma_PI5)

ans =
 
        20 (s+1)
  --------------------
  s (s+10) (s+4) (s+1)
 
Continuous-time zero/pole/gain model.

ftmf_PI5=feedback(K_PI5*ftma_PI5, 1);

% ![RL_PI5.png](RL_PI5.png)

figure; step(ftmf_PI1, ftmf_PI5) 
legend('PI_1', 'PI_5')

% ![step_PI1_PI5.png](step_PI1_PI5.png)

% Projeto de PI (Opção 3)

PI3=tf( [ 1  8] , [1 0])

PI3 =
 
  s + 8
  -----
    s
 
Continuous-time transfer function.

ftma_PI3=PI3*G;
figure; rlocus(ftma_PI3)
% Zoom na região de interesse
axis([-12 1 -9 9])
axis([-12 1 -9 9])
hold on; sgrid(zeta,0)
[K_PI3,polosMF]=rlocfind(ftma_PI3)
Select a point in the graphics window
selected_point =
     -0.40166 +    0.55728i
K_PI3 =
      0.12905
polosMF =
       -10.01 +          0i
      -4.1315 +          0i
     -0.42946 +    0.56111i
     -0.42946 -    0.56111i

% ![RL_PI3.png](RL_PI3.png)

ftmf_PI3=feedback(K_PI3*ftma_PI3, 1);
figure; step(ftmf_PI3, ftmf_PI1)
figure; step(ftmf_PI3, ftmf_PI1, ftmf_I2)
legend('PI_3', 'PI_1', 'Int Puro')

% ![step_PI3_PI1_I2.png](step_PI3_PI1_I2.png)

% Note que o zero deste controlador tão
% afastado do eixo $j\omega$, praticamente
% transforma este PI num Integrador Puro.

save planta

% # Projeto de "Lag"

% Este é o Controlador por Atraso de Fase,
% "Lag", onde simplesmente o pólo sai da origem,
% deixa de ser um integrador, mas não se
% se afasta muito da origem. Quanto mais
% distante este pólo for localizado da origem
% maior será o erro em MF.

% PI1=tf( [ 1  0.9] , [1 0])
Lag=tf( [1 0.9], [1 0.2])

Lag =
 
  s + 0.9
  -------
  s + 0.2
 
Continuous-time transfer function.

ftma_Lag=Lag*G;
zpk(ftma_Lag)

ans =
 
          20 (s+0.9)
  --------------------------
  (s+10) (s+4) (s+1) (s+0.2)
 
Continuous-time zero/pole/gain model.

figure; rlocus(ftma_Lag)
% realizando zoom na região de origem
axis([-12 1 -9 9])
hold on; sgrid(zeta,0)
[K_Lag,polosMF]=rlocfind(ftma_Lag)
Select a point in the graphics window
selected_point =
      -1.6647 +     2.2848i
K_Lag =
       3.7843
polosMF =
      -11.009 +          0i
      -1.6623 +     2.2842i
      -1.6623 -     2.2842i
     -0.86631 +          0i

% ![RL_Lag.png](RL_Lag.png)

ftmf_Lag=feedback(K_Lag*ftma_Lag, 1);
figure; step(ftmf_Lag, ftmf_PI1)

% ![step_Lag_PI1.png](step_Lag_PI1.png)

% Note o erro ocasionado pelo Lag.

dcgain(ftmf_Lag)
ans =
       0.8949
erro_Lag= ((1-dcgain(ftmf_Lag))/1)*100
erro_Lag =
        10.51

save planta
diary off
